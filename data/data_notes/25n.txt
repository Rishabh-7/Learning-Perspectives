 scrum ,project management ,emphasises teamwork accountability ,iterative progress ,simple premise ,transparency inspection ,agile software development ,rugby formation ,product development ,scrum roles ,product owner ,scrum master ,scrum development ,team product ,owner ,team member ,development team ,product owner ,scrum master ,team member ,scrum master ,scrum development team ,incremental releases ,final product ,scrum process ,scrum process ,encourages practitioners ,important part ,events scrum events ,daily scrum ,short standup meeting ,team reviews work ,previous day ,team members ,project completion sprint planning meeting ,sprint refers ,time frame ,usable piece ,sprint review ,increment sprint retrospective ,sprint retrospective ,meeting thats ,sprint ends ,sprint process ,important goal ,sprint retrospective ,continuous improvement ,scrum framework shows ,scrum revolve ,scrum team scrum artifacts ,historical interest ,scrum product development artifacts ,queue scrum artifacts ,product backlog sprint backlog product increment ,sprint planning ,meetings ,product backlog ,product backlog ,development team ,business owner ,prioritize work ,product backlog ,backlog refinement sprint backlog ,product ,backlog items ,user stories ,product increment ,product backlog items ,previous sprints ,product increment ,reflects ,visual representation ,burndown chart ,y axis work ,x axis time ,chart illustrates ,downward trend ,tim oo ,lean development ,lean software development ,software development ,defect rates ,tom poppendieck ,agile iterations ,specifications user stories ,large upfront specs ,team member ,lean development ,common problem ,customers needs ,short iterations ,unforeseen circumstances organizations ,complete fast simple improvements ,shortest time frame gain ,lean ,software development principles ,lean development methodology principles ,principles of waste elimination ,learning ,fast delivery ,team empowerment ,builtin integrity ,view applications ,whole waste ,code quality ,business value ,unnecessary code ,delays unclear requirements ,lean development focuses ,factors learning ,iterative development ,new applications ,possible integrity ,ensure architecture ,system components flow ,organizations incorporate ,lean development principles ,continuous improvement ,oo extreme ,xp extreme ,important software development framework ,agile models ,software quality ,customer requirements ,program development projects ,extreme levels ,good practices needs ,good practices ,oo code review code review detects ,corrects errors ,suggests pair ,hour oo ,reliability xp suggests testdriven development tdd ,test cases ,tdd approach test cases ,oo incremental development incremental development ,customer feedback ,development team ,new increments ,iteration oo simplicity simplicity ,good quality code ,oo design good quality design ,good quality software ,oo integration ,identify bugs ,different functionalities extreme ,continuous integration ,basic principles ,frequent iteration ,user stories user stories ,informal statements ,user story ,conventional description ,finer details ,different scenarios ,user stories ,project team ,metaphors metaphors ,common vision ,development team ,simple program ,basic activities ,software development ,xp model ,xp model ,drawing diagrams ,alternative solutions oo ,xp model ,high importance ,primary factor ,faultfree software oo ,developers needs ,good quality software ,depth knowledge ,customers oo ,proper design ,system implementation ,good design results elimination ,complex dependencies ,effective use ,suitable design ,oo feedback ,important aspects ,xp model ,exact customer ,frequent contact ,effective oo simplicity ,main principle ,xp model ,simple system ,present time ,specific features ,future requirements applications ,xp model ,small projects xp model ,small projects ,small teams ,oo projects ,new technology ,research projects ,technical problems ,xp model ,projects oo adaptive software development asd adaptive software development ,complex software ,system asd focuses ,human collaboration ,selforganisation asd life cycle incorporates ,speculation collaboration learning ,phase project ,project plan uses project initiation information ,project requirements user ,customer mission statement etc ,release cycles ,difficult part ,collaborates communication ,individual creativity ,major role ,oo criticize ,animosity oo ,resentment oo work ,possible oo possession ,oo communicate problems ,effective solution learning ,own understanding ,result learning ,project learning process ,ways focus groups ,technical reviews project postmortem asds overall emphasis ,teams interpersonal collaboration ,team learning yield software project teams ,success oo ,agile iterative ,incremental model ,main motive os featuredriven development ,levels fdd lifecycle oo ,overall model oo ,list oo plan ,oo design ,fdd oo ,short iterative fdd lifecycle ,good pace ,large projects oo customer ,agile practice ,code oo ,initial activities ,lifecycle builds ,domain model ,activities oo ,frequent releases featuredriven development ,continuous releases ,continuous success ,project advantages ,fdd oo ,oo fdd ,continuous success ,projects oo reduction ,whole model ,segments oo fdd ,cost estimation ,segmentation disadvantages ,fdd oo ,agile practice ,projects oo ,high dependency ,lead programmers designers ,mentors oo ,issue afterwards ,
