paradigms nipun harjai uco coe iii scrum scrum ,agile process ,complex projects ,multiple development iterations ,length sprints ,sprint scrum ,responsibilities meetings ,product owner scrum team scrum master ,product owner ,entire project ,team members ,product owner focuses ,market requirements ,product owner ,scrum team comprises ,scrum team work ,scrum master ,possible work ,product owner ,product backlog ,scrum master ,team mightve ,project manager ,constant communication ,team members ensure ,team members ,small modules ,constant feedback ,standup meetings ensure ,entire team ,team member ,confusion problems ,lean development ,lean development ,development processes ,lean development ,short implies ,unnecessary things ,development cycle ,lean development ,principles elimination ,important principle ,lean development elimination ,unnecessary code unclear requirements tasks ,time issues ,quality duplication ,ecient management ,unit tests ,code amplification ,code reviews ,irreversible decisions ,development cycle ,viable product ,unnecessary features ,development cycle ,delivery speed ,critical features ,lean development aims ,empower team members ,complete stream ,lean development aims ,entire systems ,part optimisation ,dierent teams ,entire system ,throughput extreme ,development method ,requirement changes ,development cycle ,agile extreme ,frequent small releases ,team members ,projects progress ,development lifecycle extreme values ,fundamental values ,entire extreme ,simplicity communication feedback respect courage extreme rules ,viable option ,modern software development ,user stoties ,frequent releases ,iterations etc ,sustainable pace ,project velocity ,good work space etc ,possible etc ,collective ownership test ,development etc ,unit tests ,unit tests ,etc extreme practices ,software development ,specific procedures ,game test ,whole team ,continuous integration code ,small releases ,collective code ownership ,simple design system metaphor ,sustainable pace adaptive software development adaptive software development refers ,software development methodology ,new features ,complex project ,approach aims ,continuous input ,traditional development models ,leaves scope ,modern business environments ,wiggle room ,software solution ,adaptive software development lifecycle speculate collaborate ,project planning phase ,development team ,development team ,speculation phase ,continuous communication ,development team ,promotes software development ,product owner ,project fdd ,teams poses ,ecient throughput fdd ,iteration zero ,initial projectwide activities ,development team ,subsequent iterations ,overall model building ,list planning ,iterative approach ,main idea ,domain members ,development team gain ,good understanding ,feature list ,form action result ,fdd process planning ,initial schedule ,feature list ,development life cycle ,client fdd focuses ,individual code ownership ,collective code ownership ,code ownership ,large teams ,large projects ,functionality perspective ,main purpose ,timely manner ,plan development ,