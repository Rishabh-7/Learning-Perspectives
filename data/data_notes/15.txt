write short notes on following
 scrum
      lean development
      extreme programming xp
      adaptive software development asd
      feature driven development

epp final assignement
submitted by   
harsh yadav
uco
 coe
 
q scrum
scrum is an agile project management methodology or framework used primarily for software development projects the scrum methodology follows the values and principles of agile but is more enhanced in terms of specifications especially related to some software development practices
scrum tries to make information regarding a project as transparent as possible so that the development team can improve and adapt on the current requirements and feedback this allows teams to address the common pitfalls of a waterfall development process chaos resulting from constantly changing requirements miscalculation of time resources and cost probably poor software quality and inaccurate progress reporting
transparency of common terms and standards is required in scrum development to ensure that what is being delivered is what was expected timely meetings and inspections detect variances early on so that adjustments can be made quickly
components of scrum
         the three roles scrum teams are selforganizing and crossfunctional selforganizing teams decide on their own how they are going to achieve their goals rather than being instructed by others outside the team crossfunctional teams have all requirements needed to achive the work without depending on others the team model in scrum is designed to optimize flexibility creativity and productivity
         a prioritized backlog containing the end user requirements
         sprints
         scrum events sprint planning answers the following what are the goals or deliverables in the increment resulting from the upcoming sprint how the above planned goals be achieved which includes all the technicalities daily scrum meeting sprint review meeting sprints retrospective meeting dealing with past events and situations

the scrum framework tries to deal with the fact that the requirements are likely to change quickly or are not completely known at the start of the project
 
q lean development
lean software development lsd is an agile framework which focuses on improving development time and optimize the usage of resources reducing or eliminating waste and finally delivering only what the product needs the lean software development is also often known as the minimum viable product mvp approach in which a team releases a bareminimum version of its product to the market gets feedback from the users and then iterates based on this feedback
lean development reduces or eliminates unnecessary activity and as a result can optimize the usage of resources and reduce costs of development empowers the development team to make decisions which can also boost morale
this approach greatly depends on the team involved in the process which makes it not as scalable as other frameworks it also depends on strong documentation and failure to do so can result in development mistakes
principles of lean development 
         reducing hindrances and wastes  unnecessary features and code more tasks in log than can be completed delays in the engineering process  inefficient communication issues with quality data duplications these are some types of wastes to identify and eliminate waste after each short iteration timely meetings are held by project managers
         quality of the product   quality management is also a one of the important principles in lsd as problems in this domain can lead to different types of waste repetitive testing of the code problems in logging and their resolution takes considerable time and therefore lead costs of development higher lsd strives to identify and resolve such nuances before they even happen
         postponing commitement  it always leaves scope for optimizations and improvements by delaying decisions which cant be modified or undone in future until all the needed experimentation is done and as much information as possible is collcted
         delivering fast  approach allows to enhance a piece of software incrementally based on the feedback collected from real customers and ditch everything that is of no value
 
q extreme programming
extreme programming xp is a software development methodology which focuses to improve software quality and responsiveness to changing customer requirements as a type of agile software development is suggests more frequent releases in short development cycles where the intention is to improve productivity and introduce checkpoints at which new customer requirements can be adopted
it is applicable when there are dynamically changing software requirements risks caused by projects being completed in fixed time and using new technology small and colocated extended development team rhe technology used allowing for automated unit and functional tests
the five values of xp are 
communication  software development is fundamentally a process requiring a team of people and it is necessary to communicate among them to share knowledge of resources and requirements so that every member is aware of the product requirements and deadlines and the methodology used  
simplification of the design and process  means identifying the most simplest solution which will fulfill the current needs the purpose of this is to avoid waste and do only what is necessary and nothing extra such as keep the design of the system as simple as possible so that it is easier to maintain support and modify
feedback of the users  through constant feedback about their previous efforts teams can identify areas for improvement and revise their practices feedback also supports simple design your team builds something gathers feedback on your design and implementation and then adjust your product going forward
courage and confidence  you need courage to raise organizational issues that reduce your teams effectiveness you need courage to stop doing something that doesnt work and try something else you need courage to accept and act on feedback even when its difficult to accept
respect  the members of your team need to respect each other in order to communicate with each other provide and accept feedback that honors your relationship and to work together to identify simple designs and solutions
 
q adaptive software development
adaptive software development asd is an extension of an earlier agile framework rapid application development rad it focuses on enabling teams to rapidly and effectively adapt to changing requirements or market needs by improvising their products with planning and continuous learning
strengths shown by asd are focused on the end users which can lead to better and more intuitive products allows for ontime and even early delivery encourages more transparency between developers and clients
the asd follows a threephase process speculate collaborate learn
speculate  the predecided goals and features bound the manager and his ability to modify the project in a more innovative path in asd planning is replaced by speculation while speculating the team does not abandon planning but it identifies the uncertainty in complex projects speculation encourages experimentation iterations with short cycles are encouraged
colaborate  complex applications require that a large volume of information be collected analyzed and applied to the problem this results in diverse knowledge requirements that can only be handled by team collaboration this needs teams members to work jointly share knowledge of resources optimized solutions and clarifications of changing requirements
learn  team has to enhance their knowledge constantly using practices such as  technical reviews project retrospectives customer focus groups reviews should be done after each iteration the team learns  about product changes more fundamental changes in underlying assumptions about how the products are being developed the iterations need to be short so that the team can learn from small rather than large mistakes
 
q feature driven development
feature driven development fdd is an agile framework which moves forward by tracking the progress on features being built features in terms of fdd are not necessarily product features they are instead more related to user stories in scrum it is an iterative and incremental software development process
fdd in suggests reporting of progress status at all vertical levels which helps all the people working on the project have a track of progress and results enabling them to decide speed and deadlines of the subtasks
fdd allows teams to update the project regularly and identify errors quickly clients or stakeholders can be given status reports on the development process anytime fdd is a favorite method among development teams because it helps reduce confusion and rework in terms of the development world
typically used in largescale development projects five basic activities exist during fdd
develop overall model  the overall model is created by identifying the scope and context of the system this is done by the product manager or chief architect of the team
make a list of features  developers list down potential items that would be useful to users and could be completed along a set timeline for release each feature should be manageable within a timeframe
feature wise planning  features are organized by how long they take to create and how important they are to the client responsibility of each feature is also assigned to different members of the team
feature wise designing  the actual details of each feature are produced inspected and finalized
build by feature  after the design is improved the completed feature is added to the official build for delivery to the client

 

