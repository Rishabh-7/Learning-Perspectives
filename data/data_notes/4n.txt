epp assignment name ankush grover ,following scrum scrum ,agile project management methodology ,software development projects ,new software capability ,agile manifesto ,higherquality software ,scrum addresses complexity ,information transparent ,current conditions ,common pitfalls ,waterfall development process chaos ,requirements underestimation ,time resources ,cost compromises ,software quality ,inaccurate progress ,common terms ,scrum development ,frequent inspection ensures progress ,detects variances ,scrum development ,scrum team ,product owner ,product owner ,projects key stakeholder ,product owner ,overall mission ,hierarchial authority ,scrummaster ensures ,team adheres ,scrum theory practices ,scrummaster protects ,product owner groom ,development team ,development team ,crossfunctional group ,shippable increments ,development team ,development team ,product backlog items ,shippable increments scrum events ceremonies ,specific work ,review sprints ,week sprint planning sprint planning team meetings ,product backlog items ,daily standup ,daily standup ,short communication meeting ,team member ,sprint review ,sprint review ,demonstration event ,product owner checks ,acceptance criteria ,business need ,final team meeting ,important opportunity ,overall performance ,identify strategies ,continuous improvement ,processes scrum artifacts product backlog ,product backlog ,important document ,system project ,product backlog ,todo list ,work items ,business value backlog items ,business value ,product owner sprint backlog ,sprint backlog ,specific list ,product backlog ,sprint increment ,product backlog items ,software release ,product owner ,teams responsibility ,shippable increment psi scrum rules ,agile scrum ,agile coaches ,basic scrum events ,unique needs ,continuous improvement ,way teams work ,lean development ,lean software development lsd ,agile framework ,development time ,lean approach ,viable product mvp strategy ,team releases ,bareminimum version ,market learns ,lsd methodology ,excellent approach ,software development ,final product ,outstanding development team ,iterative development ,new applications ,possible integrity ,ensure architecture ,system components flow ,organizations incorporate ,lean development principles ,continuous improvement ,lean software development ,software development ,defect rates ,tom poppendieck ,agile iterations ,specifications user stories ,large upfront specs ,team member ,lean development ,common problem ,customers needs ,short iterations ,unforeseen circumstances organizations ,complete fast simple improvements ,shortest time frame gain ,benefits extreme ,xp extreme ,important software development framework ,agile models ,software quality ,customer requirements ,program development projects ,extreme levels ,basic principles ,frequent iteration ,user stories user stories ,informal statements ,user story ,conventional description ,finer details ,different scenarios ,development team ,simple program ,basic activities ,software development ,xp model ,xp model ,drawing diagrams ,alternative solutions ,xp model ,high importance ,primary factor ,faultfree software ,developers needs ,good quality software ,depth knowledge ,proper design ,system implementation ,good design results elimination ,complex dependencies ,effective use ,suitable design ,important aspects ,xp model ,exact customer ,frequent contact ,effective simplicity ,main principle ,xp model ,simple system ,present time ,specific features ,future requirements adaptive software development asd adaptive software development ,complex software ,system asd focuses ,human collaboration ,selforganisation adaptive software development practices ,turbulent environments ,learning phases ,asd life cycle adaptive software development ,evolutionary model ,phase names ,complex systems ,adaptive development life cycle ,speculate collaborate ,phases reflect ,dynamic nature ,adaptive software development ,adaptive development ,replaces determinism ,management style adaptive software development ,dynamic speculatecollaboratelearn lifecycle ,adaptive software development lifecycle focuses ,term plan ,high degree ,explicit goal ,managers ability ,innovative directions ,adaptive software development ,term plan ,term speculate ,abandon planning ,complex problems speculate encourages exploration ,experimentation iterations ,short cycles ,complex applications ,complex applications ,large volume ,problem turbulent environments ,high rates ,information flow ,complex applications ,large volume ,diverse knowledge requirements ,team collaboration collaborate ,project management collaboration portrays ,traditional management techniques ,collaborative environment ,project team ,technical reviews project retrospectives customer focus groups reviews ,development cycle ,adaptive framework ,development fdd ,agile framework ,name suggests organizes software development ,fdd context ,user stories ,login process ,development fdd methodology ,big corporation ,largescale software project fdd ,methodology relies ,chief developers ,agile frameworks ,collective project ownership ,companys culture ,fivestep development process ,project lifecycle ,overall model ,list plan ,simple fivestep process ,rapid development ,continuous success leverages ,development standards ,lead developers ,