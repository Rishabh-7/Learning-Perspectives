epp

assignment

emerging programming
paradigm

assignment work
for assessment

submitted to kanika mam
submitted by akhil hooda
uco


akhil

uco

epp

assignment

question write short notes on following
 scrum
scrum works by breaking large products and services into small pieces that can be
completed or released by a crossfunctional team in a short timeframe it works well for
longterm complex projects that require stakeholder feedback a scrum team contains 
to  people with the roles of the product owner the scrum master and the development
team the product owner is a key stakeholder or a key user the product owner is
ultimately accountable for managing the product backlog and accepting completed
increments of work the scrum master is responsible for making sure the team is as
productive as possible the scrummaster protects the team by doing anything possible to
help the team perform at the highest level this may include removing impediments
facilitating meetings and helping the product owner groom the backlogthe development
team is a cross functional group consisting of the people who deliver the product
increment inside a sprint the product backlog is a prioritised features list containing
every desired feature or change to the product a sprint is a timeboxed period of one
month or less during which specific work product increment is completed and made
ready for review meeting at the start of each sprint a sprint planning meeting is held
during which the product owner presents the top items on the product backlog to the team
the scrum team selects the work they can complete during the coming sprint that work is
then moved from the product backlog to a sprint backlog each day during the sprint a
brief meeting called the daily scrum is conducted which aims at keeping the team on
track at the end of each sprint the team demonstrates the completed functionality at a
sprint review meeting during which the team shows what they accomplished during the
sprint the retrospective is the final team meeting in the sprint which is attended by the
team product owner and the scrummaster to determine what went well what didnt go
well and how the team can improve in the next sprint
 lean development
the lean approach or the minimum viable product mvp strategy is one in which a
team releases a bareminimum version of its product to the market learns from users what
they like dont like and want to be added and then iterates based on this feedback the
practice is based on seven principles
eliminate waste waste is defined as anything that is capable of reducing code quality
hindering time and effort or reducing delivered business value
amplify learning and create knowledge learning happens by implementing short
iteration cycles and continuously gathering feedback to adjust the deliverables as the
needs of the users become clearer
late decision making the last moment is defined as the moment youve learned
enough about a decision to act on itby waiting until the last minute to make decisions the
cost of change remains much less
build quality in integrity is built into the software to ensure architecture and that system
components flow well together creating quality at the coding level so that instead of
tracking and looking for defects they can be prevented from the start
respect people respect in this context is defined as giving team members a voice and
valuing their opinions respect extends to communication conflict resolution and
encouraging healthy and productive discussions about business decisions
akhil

uco

epp

assignment

deliver fast it starts by identifying the things that are slowing down the team and
eliminating them delivering fast doesnt mean overworking until burnout to hit deadlines
its about creating the most functional versions of solutions and then improving it over time
using customer feedback
view applications as a whole finding the components of the process that are
dependent on one another and optimising all of them instead of just one part of it
 extreme programming xp
xp is a set of engineering practices developers have to go beyond their capabilities while
performing these practicesxp has simple rules that are based on  values which are as
followingcommunication simplicity feedback courage and respect
communication teams work together on every part of the project from gathering
requirements to implementing code and participate in daily standup meetings to keep all
team members updated any concerns or problems are addressed immediatelyxp
stresses the importance of the appropriate kind of communication  face to face
discussion with the aid of a white board or other drawing mechanism
simplicity it means keeping the design of the system as simple as possible so that it is
easier to maintain support and revise avoid any waste and address only the
requirements that you know about dont try to predict the future
feedback the team should demonstrate their software early and often so they can
gather feedback from the customer and make the necessary changes through constant
feedback teams can identify areas for improvement and revise their practices
courage kent beck defined courage as effective action in the face of fear you need
courage to raise organisational issues that reduce your teams effectiveness you need
courage to stop doing something that doesnt work and try something else you need
courage to accept and act on feedback even when its difficult to accept
respect each person on the team regardless of hierarchy is respected for their
contributions every member of your team need to respect each other in order to
communicate with each otherthe team respects the opinions of the customers
with this foundation extreme programmers are able to courageously respond to changing
requirements and technologyxp follows some basic rules for each iteration which are
 planning on the basis of the user stories provided by the customer feedback team
creates a release schedule and divides the project into iterations
 managing give the team a dedicated open work space and hold a stand up meeting
each day everyone needs to work collaboratively and effectively communicate to
avoid any slipups measuring project velocity and reacheduling work to avoid
bottleneck and in case xp dont work properly change the rules
 designing start with the simplest design and refactor often to keep your code clean
and concise and dont add functionality earlycreate spike solutions to reduce risk
 coding xp practices collective code ownership everyone reviews code and any
developer can add functionality fix bugs or refactor
 testing  the team performs unit tests and fixes bugs before the code can be
released they also run acceptance tests frequently
 adaptive software development asd
it grew out of rapid application developmentit aims to enable teams to quickly and
effectively adapt to changing requirements or market needs by evolving their products with
lightweight planning and continuous learning there is no pre planned steps in this
process the asd approach encourages teams to develop according to a threephase
process speculate collaborate learn
akhil

uco

epp

assignment

 speculate during this phase coders attempt to understand the exact nature of the
software and the requirements of the users this phase relies on bug and user reports
to guide the project speculate encourages exploration and experimentation iterations
with short cycles are encouraged
 collaborate collaborate would require the ability to work jointly to produce results
share knowledge or make decisionseffective collaboration with customer is very
important communication teamwork individual creativity is part of effective
collaboration more concern about collaboration and dealing with concurrency than
about the details of designing testing and coding here the team members or sub
teams are working concurrently to deliver the working components
 learn this phase consists of quality review and final qa release during the
learning phase the newest version of the software is released to users this generates
the bug and user reports used during the first phase of the project and the cycle
repeats itself during this phase components are implemented and tested
this lead to an iterative approachsees the project continuously cycling from speculation
to collaborationsince it is focused on the end users it can lead to better and more intuitive
products an also increasing the transparency between the clients and the developers
 feature driven development fdd
it is one of the agile processes that is not talked or written about very much it is primarily
used in those cases where we need to apply agile to larger projects and teams fdd in
agile encourages status reporting at all levels which helps to track progress and results it
uses a customercentric iterative and incremental approach to deliver software the
general objective of fdd is to deliver concrete and flexible software in a short time its
greatest advantage is that the process is scalable even for large teamsit helps reduce
confusion and rework as fdd provides the team members with an opportunity to
communicate more easily and provides the development team with the ability to break the
entire problem into many smaller issues that they can cope withit is designed to follow a
fivestep development process built largely around discrete feature projects these are 
 developing an overall model  the development team members cooperate together
to propose a model for the domain area after looking into the very teams model one
or a merge of models is chosen and it becomes the model created for that domain
area
 building a feature list  after the development team built an object model features
based on the user or client values are identified these features are meant to be the
building barriers of the project that help the group members to navigate the processes
 planning by the feature  the third stage is about managing and implementing the
featuresits essential to consider the team workload risks as well as other important
aspects in order to prevent any kind of complex issues from arising
 designing by the feature  the chief programmer determines which features will be
designed and built in a twoweek iteration this person also defines the feature
priorities and determines who will be involved on the feature team a design review
needs to be completed by the whole team before moving forward
 building by the feature  the last step is to put all the necessary items into action in
order to support the design in other words once your team developed tested and
inspected the code it is time to start developing the software

akhil

uco

