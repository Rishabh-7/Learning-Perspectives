emerging programming
paradigms ced
assignment

emerging programming paradigms ced
sudhanshu sah
uco
computer engineering

contents
scrum agile framework



definition



applications



advantages



disadvantages



values



roles



lean software development lsd



definition



applications



advantages



disadvantages



principles



extreme programming xp



definition



applications



advantages



disadvantages



practices



adaptive software development asd



definition



applications



advantages



page 

disadvantages



phases



feature driven development fdd



definition



applications



advantages



disadvantages



phases



page 

scrum agile framework
definition
scrum is a lightweight agile framework it is an approach to project management
scrum helps the progress of a project by dividing the goals in backlog into smaller time
limited blocks of work called sprints these sprints are usually time limited to  weeks
scrum is both iterative and incremental scrums use of repeating cycles signifies that it
is iterative and since the work is delivered in small batches it is incremental

applications
scrum is usually used by crossfunctional teams with  members teams using
scrum are selforganizing ie they are not managed in a topdown hierarchical
manner

advantages





fast feedback
continuous improvements
rapid adaptation to changes
faster time to market and accelerated delivery

disadvantages



strictness for eg teams are not allowed to host more than one scrum review in a
single sprint
pressure on team members due to frequent and short deadlines

values






commitment team members commit personally to achieve team objectives
courage team members work on complex problems encountered and solve them
focus team members concentrate on the problems identified in sprint planning
openness team members are open about the problems and solutions they
encounter
respect team members respect each other and believe in the skills of colleagues

roles




product owner team responsible for managing the product backlog
scrum master team responsible for removing distracting elements and making
sure that team follows agile principles
development team team delivering the incremental work in sprints

page 

lean software development lsd
definition
lean software development is an agile framework it focuses on optimizing the usage
of resources and the development time it has  principles which are derived from
lean manufacturing developed by toyota toyota production system tps
it aims at providing minimum viable product mvp and capturing the user feedback
regarding the mvp this feedback is taken into consideration into the next development
cycle

applications
lsd is usually used when the project is bloated and the development cost is high
lsd is used to cut away the extra features so that only the mvp is delivered at a much
reduced development cost while using the least amount of resources
lsd is used in projects where efficiency is paramount
lsd is also used in cases where it is uncertain what the users want lsd can be used to get
crucial user feedback

advantages




streamline the flow delivering more features in less time by cutting away the
waste
eliminate extra and redundant activities to reduce the development cost
boosts the morale of team by giving them power to choose which features will
be present in the product

disadvantages




not much scalability due to heavy dependency on the team involvement
largely dependent on good documentation failure to do so can lead to
problems related to collaboration later in the development cycle
lsd allows the srs to evolve to maintain flexibility but doing so can lead to
development of a project in a direction that was initially not expected

principles





eliminate waste remove extra features unpolished work etc
amplify learning allow the design to evolve encourage systematic learning etc
defer commitment schedule irreversible decisions for the last possible moment
deliver fast dont let customers change their mind early introduction to market
leads to better cost advantage
page 





empower the team responsibility based control and planning
build quality in keep the codebase simple do good issue tracking do
continuous integration etc
optimize the whole modern softwares are more than sums of their parts
integration also plays a major role one defect can lead to reduced productivity in
more than one department

page 

extreme programming xp
definition
extreme programming is an agile framework it aims to produce higher quality
products to satisfy stakeholders as well as make lifes of developers easier it includes
practices like coding in pairs not implementing features until they are needed etc it
leverages dynamically changing software requirements

applications
xp is usually deployed in teams which are handling products with highly flexible
software requirements if the team is not sure about the requirements and expects them
to change then xp is the preferred framework
it is also used in teams where the number of members is less and the members work
closely with the managers

advantages





save development cost
avoid risks related to dynamic software requirements in traditional sdlcs
emphasis on quality of life of the team members
team members have the accountability for the teams work

disadvantages




little emphasis on code quality
more emphasis on code over design
not suitable for teams working remotely all members need to be colocated

practices








sit together do facetoface communication
pair programming collaborating with other members on the same machine
while developing code leads to faster development with lesser issues as the code is
getting reviewed in real time
stories describe the features users want in short stories with terms relevant to
customers and users
continuous integration code changes are integrated into the larger codebase
and tested immediately to make sure the build is working properly
whole team teams should consist of crossfunctional members with necessary
roles
energized work do not overwork stay healthystay focused and show respect to
colleagues
page 

adaptive software development asd
definition
adaptive software development is an agile framework it was developed after extending
rapid application development rad it aims to make the teams invulnerable to
penalties due to rapidly changing software requirements and the market in asd the
product is continuously evolved by lightweight planning and continuous learning
there are three phases involved in the asd process speculate collaborate and learn

applications



teams who want to prioritize rapid development and quick delivery of the
product
teams who want their product to be continuously evolving

advantages




more emphasis on end user experience
quick delivery of product
emphasis on transparency between users and developers

disadvantages



demands high user feedback and involvement
incurred cost due to extensive testing

phases


speculate
teams are free to do experimentation and exploration this phase extends the
planning part by incorporating the results from the experimentation and
exploration



collaborate
collaborate phase focuses on combining the knowledge gained by the individual
members to solve a larger and more complex problem complex solutions are not
built in a day they evolve over time this evolution is made possible by individual
efforts of the members their individual efforts are collected analyzed and
applied to the problem



learn
teams need to evolve their knowledge continuously by doing reviews of mistakes
page 

feature driven development fdd
definition
feature driven development is an agile framework it focuses on making progress on
features these features are not necessarily product features but are more like stories in
scrum

applications



teams working on large projects
teams which are organized in topdown management

advantages




rapid development due to simple  step process explained in phases part
allows larger teams to collaborate easily
requires fewer meetings

disadvantages




not efficient for smaller projects
involves less documentation could be a problem for future development
puts more dependency on project managers and lead developers

phases







develop overall model define outline of domain model
build feature list identify features required by the client features are not
necessarily product features they are more like scrum stories
plan by feature give ranking to the features in feature list to determine the order
in which the features will be developed
design by feature lead programmer decides which features will be implemented
in a time limited  weeks development iteration a design review is done later on
to finalize the design
build by feature all supporting code is implemented to test the feature and then
unit testing is done

page 

