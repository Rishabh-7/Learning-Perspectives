paradigms assignment ,assessment date ,uco deepesh chugh ,scrum scrum ,agile process framework ,jeff sutherland ,ken schwaber ,effective team collaboration ,complex product development ,team project ,aggressive deadlines ,complex requirements ,various disciplines ,software development ,scrum team ,person teams ,scrum team ,software development ,usual roles ,programmer designer tester etc ,product owner ,product owner ,projects key stakeholders users customers ,development team development team ,development team ,releasable increment ,functional scrum master ,scrum master ,development team ,scrum principles ,scrum process ,key artifacts ,maximize transparency ,key information ,product backlog ,product backlog ,product owner ,product backlog ,sprint backlog ,sprint backlog ,product backlog items ,sprint planning meeting ,product increment ,sprint goal increment ,inspectabledone work ,product backlog items ,previous sprints ,scrum process ,unnecessary meetings ,scrum events ,releasable product increments ,time box ,sprint sprint planning ,sprint planning meeting ,scrum team pulls work ,product backlog ,sprint backlog ,brief meeting ,days work ,daily scrum sprint review ,sprint review meeting ,development team ,functionality sprint retrospective ,sprint retrospective ,entire scrum team analyzes ,scrum process ,lean development ,lean development ,iterative agile methodology ,optimize production ,waste ie nonvalue ,software development ,dr robert charette ,tom poppendieck ,lean principles ,efficient software products ,wrong processes ,quality ensure ,end amplify learning ,iterative process ,users defer ,critical decisionscommitments irreversible decisions ,responsible moment ,relevant uptodate information ,fast short development cycles ,user feedback ,customers needs respect people respect ,team members ,encourages healthy ,productive discussions ,key business decisions optimize ,xp extreme ,agile software development framework ,software quality ,customer requirements ,development team ,extreme level extreme ,core values ,communication xp stresses ,appropriate kind ,white board ,software development ,team sport ,team members simplicity simplicity implies ,future feedback ,simplicity feedback ,customers needs ,courage courage ,team members ,organizational issues ,ageold practices ,teams effectiveness ,available respect respect ,team members ,adaptive software development asd adaptive software development ,software development practice ,rapid application development rad practices ,jim highsmith ,turbulent environments ,asd life cycle ,speculation phase ,non deterministic replacement ,planning phase ,general software development life cycle ,complex problem ,phase uses initiation information ,requirements user ,short release cycles collaboration ,high rate ,information flow ,individual members ,collaborate ie work ,individual skill ,learning phase ,project technology ,focus groups b ,technical reviews c project retrospectives ,iterations need ,development fdd ,development fdd ,agile process ,organizes software development ,user stories ,fdd life cycle ,overall model ,development teams ,chief architect focus ,overall scope ,featureheavy detail ie ,team focuses ,target audience ,necessary structure ,chief programmers decompose ,overall model ,previous phase ,feature plan ,important decisions ,chief programmers ,key classes ,developers design ,chief programmer forms ,feature team ,class owners ,object model ,sequence diagrams ,method prologues ,design inspection ,class owners work ,design package ,previous phase ,work package ,chief programmer ,fdd framework ,clearer project management minimizes complexity ,