following scrum ,lean development extreme ,xp adaptive software development asd ,ayan krishna paul ,uco scrum scrum ,incremental software development agile process ,product development ,complex adaptive problems ,possible value ,multiple small teams ,interdependent manner ,organization work ,common interest scrum ,roles v product owner v scrum master v scrum team product owner ,product owner creates ,product backlog ,release date ,content prioritize ,market value ,reject work results scrum master ,scrum master conducts ,meetings ensures ,productive shield ,external interfaces ,project scrum team ,people teams ,scrum team determines ,large projects ,mall sprints customers ,sprint backlog items ,strong commitment ,lean development ,lean development ,lean development ,software development model robert charette ,ld ld ,agile methodology ,agile methodologies ,major changes ,organization lds goals ,development time ,average organization ,aggressive goals ,different ways principles ,lean development ,waste amplify learning delay commitment empower ,whole wastes ,software development partial work ,unnecessary features ,additional features ,development difficulty ,errors delay commitment decision ,possible moment benefits ,delay commitment ,decision o ,ld process ,ld process ,highlevel phases startup steadystate transition ,renewal contribution ,strategic focus ,lean production risk entrepreneurship ,goals extreme ,xp extreme ,efficient lowrisk ,fun way ,software xp ,software development principles ,extreme levels ,communication simplicity feedback courage ,respect xp ,approach activities ,key practices ,planning game ,small releases system metaphor ,simple design ,continuous integration ,collective ownership onsite customer ,hour week ,standards advantages ,customers flexibility ,manage disadvantages ,customer interaction adaptive software development asd adaptive software development asd ,new software development methodology ,rapid creation application ,software systems ,rapid application development rad ,jim highsmith ,complex software ,human collaboration ,team selforganization ,adaptive life cycle ,main phases speculate collaboration learning speculate o ,adaptive cycle planning ,ability collaboration o encompasses communication ,individualism o ,cant control ,traditional management sense o ,cant control ,significant set ,current management practices ,operable learning o ,stakeholders o ,development cycle ,speculate collaboration learning ,project leaders ,project teams adaptive development ,prospect advantages software incremental adjustment ,complex software development disadvantages ,development fdd ,agile software development methodology fdd ,shortiteration model ,large projects ,agile methodologies fdd ,fivestep process ,overall model ,list plan ,technical reviews ,code inspections ,fdd customer involvement ,new features exceeds ,project manager ,top management fdd ,important roles o chief architect ,o chief programmer chief architect ,overall model ,chief programmer ,important parts action result ,temporary groups ,teams class ownership class ownership ,specific developer class owners ,new features quality classes ,class ownership class owners ,